plugins {
	id 'fabric-loom' version '1.4-SNAPSHOT'
	id 'maven-publish'
}

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

archivesBaseName = project.archives_base_name
version = project.mod_version
group = project.maven_group

repositories {
	maven { url "https://maven.terraformersmc.com/releases" }
	maven { url "https://maven.shedaniel.me/" }
	maven { url "https://limeappleboat.jab125.com/" }
	maven {
		url = 'https://maven.jamieswhiteshirt.com/libs-release/'
		content {
			includeGroup 'com.jamieswhiteshirt'
		}
	}
	maven {
		name = 'Ladysnake Mods'
		url = 'https://ladysnake.jfrog.io/artifactory/mods'
		content {
			includeGroup 'io.github.ladysnake'
			includeGroup "dev.emi.chime"
			includeGroupByRegex 'io\\.github\\.onyxstudios.*'
			includeGroupByRegex 'dev\\.onyxstudios.*'
		}
	}

	maven { url 'https://jitpack.io' }
	maven {
		name = 'Nexus OSS Repository'
		url = 'https://oss.sonatype.org/content/repositories/snapshots'
	}
	flatDir { dirs 'lib' }
	maven {
		url = "https://minecraft.guntram.de/maven/"
	}
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modCompileOnly "dev.emi:trinkets:${project.trinkets_version}"

	modCompileOnly "io.github.ladysnake:requiem-api:${project.requiem_version}"
	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

	modRuntimeOnly "dev.onyxstudios.cardinal-components-api:cardinal-components-api:${project.cardinal-components-api_version}"


	modCompileOnly "com.github.apace100:apoli:${project.apoli_version}"
	modApi("me.shedaniel.cloth:cloth-config-fabric:${project.cloth_config_version}") {
		exclude(group: "net.fabricmc.fabric-api")
	}

	modImplementation "com.terraformersmc:modmenu:${modmenu_version}", {
		exclude module: "fabric-api"
	}

	//modApi include("com.jab125:thonkutil-${project.thonkutil_version}")
	modApi ("com.jab125:thonkutil-potions-v0-1.5.1")
	modApi ("com.jab125:thonkutil-capes-v1-1.4.0")
	modRuntimeOnly ("com.jab125:thonkutil-legacy-1.1.1")
	modApi ("com.jab125:thonkutil-trades-v1-1.2.1")
	modApi ("com.jab125:thonkutil-base-1.13.1")
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": project.version
	}
}

loom {
	accessWidenerPath =  file("src/main/resources/GobTFabric.accesswidener")
	runs {
		data {
			server()
			name "Data Gen"
			vmArg "-Dfabric-api.datagen"
			vmArg "-Dfabric-api.datagen.output-dir=${file("src/main/generated/resources")}"
			ideConfigGenerated = true
		}
	}
}
sourceSets {
	main{
		resources {
			srcDirs += [
					'src/main/generated'
			]
		}
	}
}

tasks.withType(JavaCompile).configureEach {
	// ensure that the encoding is set to UTF-8, no matter what the system default is
	// this fixes some edge cases with special characters not displaying correctly
	// see http://yodaconditions.net/blog/fix-for-java-file-encoding-problems-with-gradle.html
	// If Javadoc is generated, this must be specified in that task too.
	it.options.encoding = "UTF-8"

	it.options.release = 17
}

java {
	// Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
	// if it is present.
	// If you remove this line, sources will not be generated.
	withSourcesJar()
}

jar {
	from("LICENSE") {
		rename { "${it}_${project.archivesBaseName}"}
	}
}

// configure the maven publication
publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
		}
	}

	// See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
	repositories {
		// Add repositories to publish to here.
		// Notice: This block does NOT have the same function as the block in the top level.
		// The repositories here will be used for publishing your artifact, not for
		// retrieving dependencies.
	}
}


sourceSets.main.resources {
	srcDirs = ['src/main/resources', 'src/main/generated/resources']
}
assemble.dependsOn runData
runClient.dependsOn runData //changes are only applied on next run
runServer.dependsOn runData //changes are only applied on next run

javadoc {
	options {
		if (file("README.html").exists()) {
			overview = "README.html"
		}
		source = "17"
		encoding = 'UTF-8'
		charSet = 'UTF-8'
		memberLevel = JavadocMemberLevel.PACKAGE
		links(
				'https://asm.ow2.io/javadoc/',
				'https://docs.oracle.com/javase/8/docs/api/',
				'https://logging.apache.org/log4j/2.x/log4j-api/apidocs/'
		)
		// Disable the crazy super-strict doclint tool in Java 8
		addStringOption('Xdoclint:none', '-quiet')
	}
	source sourceSets.main.allJava.srcDirs
	classpath = sourceSets.main.compileClasspath + sourceSets.main.output // compile impl stuff for dep as well
	include("**")
	// workaround as one of the api stuff use that package
	failOnError false
}

task javadocJar(type: Jar) {
	dependsOn javadoc
	from javadoc.destinationDir
	archiveClassifier = 'javadoc'
}

build.dependsOn javadocJar